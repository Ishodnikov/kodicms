<?php defined('SYSPATH') or die('No direct access allowed.');class Filesystem extends DirectoryIterator{		public function __construct($path = '.')	{		if (PHP_OS == 'WIN' || PHP_OS == 'WINNT')			$path = iconv('UTF-8', 'CP1251', $path);				if ( ! is_dir($path))			throw new Exception('Directory '.$path.' not found!');				parent::__construct($path);	}	    public function getIterator()     {         return $this->dirArray->getIterator();    }		public function isImage()	{		return in_array($this->getExtension(), array('png', 'jpg', 'jpeg', 'gif'));	}		public function getImageThumb()	{		if ( ! $this->isImage())			return false;				return $this->getFilename();	}		public function getFilenameUTF8()	{		$file_name = $this->getFilename();				if (PHP_OS == 'WIN' || PHP_OS == 'WINNT')			return iconv('CP1251', 'UTF-8', $file_name);		elseif (function_exists('mb_detect_encoding'))			return iconv(mb_detect_encoding($file_name), 'UTF-8', $file_name );	}		public function getChmodPerms($octal = false)	{		return substr(sprintf('%o', $this->getPerms()), -4);	}		public function getExt()	{		if ( ! $this->isDir())		{			$pathname = $this->getPathname();			return substr($pathname, strrpos($pathname, '.')+1);		}		else			return null;	}} // end class Filesystem